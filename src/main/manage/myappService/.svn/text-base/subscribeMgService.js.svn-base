/**
 * Created by Darren_YCDing on 16/4/8.
 */
module.exports = function($http, $q, httpservice, Session){
    var subscribeMgService = {};
    //按开发商加载
    subscribeMgService.getAppsByCompany = function () {
        var deferred = $q.defer();
        $http({
            method: 'GET',
            url: httpservice.subscribe_Manage_Company,
            params: {
                'sessionId': Session.id,
                'userId': Session.userId,
                'companyId':Session.companyId
            }
        }).then(function successCallback(response) {
            deferred.resolve(response.data);
        }, function errorCallback(response) {
            console.log("subscribeMgService  管理_我的应用_我的订阅:按开发商加载失败！");
            deferred.reject(response.data);
        });
        return deferred.promise;
    };

    //按分类加载
    subscribeMgService.getAppsByClass = function () {
        var deferred = $q.defer();
        $http({
            method: 'GET',
            url: httpservice.subscribe_Manage_Class,
            params: {
                'sessionId': Session.id,
                'userId': Session.userId,
                'companyId':Session.companyId
            }
        }).then(function successCallback(response) {
            deferred.resolve(response.data);
        }, function errorCallback(response) {
            console.log("subscribeMgService  管理_我的应用_我的订阅:按分类加载失败！");
            deferred.reject(response.data);
        });
        return deferred.promise;
    };

    //取消订阅
    subscribeMgService.unDoApp = function (appId,flowId) {
        var deferred = $q.defer();
        $http({
            method: 'POST',
            url: httpservice.subscribe_Manage_unDo,
            params: {
                'sessionId': Session.id,
                'userId': Session.userId,
                'companyId':Session.companyId,
                'appId':appId,
                'flowId':flowId
            }
        }).then(function successCallback(response) {
            deferred.resolve(response.data);
        }, function errorCallback(response) {
            console.log("subscribeMgService  管理_我的应用_我的订阅:取消订阅失败！");
            deferred.reject(response.data);
        });
        return deferred.promise;
    };

    return subscribeMgService;
};